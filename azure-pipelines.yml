trigger:
  - main   # change to your branch if not 'main'

pool:
  vmImage: ubuntu-latest

variables:
  TEST_PROJECT: chromium
  ALLURE_RESULTS_DIR: my-allure-results

steps:
  - checkout: self
    fetchDepth: 1

  - task: NodeTool@0
    inputs:
      versionSpec: '20.x'
    displayName: 'Use Node.js 20'

  - script: |
      sudo apt-get update -y
      sudo apt-get install -y openjdk-17-jre-headless unzip
    displayName: 'Install Java (for Allure)'

  - script: |
      npm ci
      npx playwright install --with-deps
    displayName: 'Install deps & browsers'

  - script: |
      echo "Run Playwright"
      ALLURE_RESULTS_DIR=$(ALLURE_RESULTS_DIR) npx playwright test --project=$(TEST_PROJECT) --reporter=line,html,allure-playwright || true
    displayName: 'Run Playwright tests'

  - script: |
      RESULTS_DIR="$(ALLURE_RESULTS_DIR)"
      if [ ! -d "$RESULTS_DIR" ] && [ -d "allure-results" ]; then RESULTS_DIR="allure-results"; fi
      if [ -d "$RESULTS_DIR" ]; then
        npx allure generate "$RESULTS_DIR" --clean -o allure-report
      else
        mkdir -p allure-report && printf "<h2>No Allure report</h2>" > allure-report/index.html
      fi
    displayName: 'Generate Allure HTML'

  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: 'playwright-report'
      artifact: 'playwright-report'
    condition: always()
    displayName: 'Publish Playwright HTML'

  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: 'allure-report'
      artifact: 'allure-report'
    condition: always()
    displayName: 'Publish Allure HTML'
