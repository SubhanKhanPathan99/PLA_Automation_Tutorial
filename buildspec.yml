version: 0.2

env:
  variables:
    S3_BUCKET: my-playwright-reports-123
    S3_PREFIX: playwright
    S3_WEBSITE_HOST: my-playwright-reports-123.s3-website.us-east-2.amazonaws.com

phases:
  install:
    commands:
      - 'echo Installing Java and unzip'
      - 'if command -v yum >/dev/null 2>&1; then yum install -y java-17-amazon-corretto-headless unzip; elif command -v apt-get >/dev/null 2>&1; then apt-get update -y && apt-get install -y openjdk-17-jre-headless unzip; else echo No supported package manager found; fi'
      - 'echo Ensuring AWS CLI is installed'
      - 'if ! command -v aws >/dev/null 2>&1; then curl -sSL https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip -o awscliv2.zip && unzip -q awscliv2.zip && ./aws/install && aws --version; else aws --version; fi'
      - 'echo Installing NPM dependencies'
      - 'npm ci'
      - 'echo Installing Playwright browsers and Linux deps'
      - 'npx playwright install --with-deps'

  build:
    commands:
      - 'echo Running Playwright tests - reporters: line, html, allure-playwright'
      # Force Allure to write where we expect; keeps working even if CLI reporters override config
      - 'ALLURE_RESULTS_DIR=my-allure-results npm run test:chromium || true'
      - 'echo After run: listing workspace'
      - 'ls -la'
      - 'ls -la playwright-report || true'
      - 'ls -la my-allure-results || true'
      - 'ls -la allure-results || true'
      - 'echo Determine Allure results folder and generate HTML'
      - 'RESULTS_DIR=my-allure-results; [ -d "my-allure-results" ] || { [ -d "allure-results" ] && RESULTS_DIR=allure-results; }; echo "Using Allure results from: $RESULTS_DIR"; [ -d "$RESULTS_DIR" ] && npx allure generate "$RESULTS_DIR" --clean -o allure-report || echo "No Allure results to generate"'
      # Safety net so links never 404 even if nothing generated
      - '[ -d "playwright-report" ] || { mkdir -p playwright-report && printf "<h2>No Playwright report</h2><p>No tests were discovered or report not generated.</p>" > playwright-report/index.html; }'
      - '[ -d "allure-report" ] || { mkdir -p allure-report && printf "<h2>No Allure report</h2><p>No Allure results were generated.</p>" > allure-report/index.html; }'

  post_build:
    commands:
      - 'echo === AWS identity and bucket check ==='
      - 'aws --version'
      - 'aws sts get-caller-identity'
      - 'aws s3api head-bucket --bucket "$S3_BUCKET" || ( echo "Bucket not reachable"; exit 1 )'
      - 'export BUILD_TS=$(date -u +"%Y%m%d-%H%M%S"); export SRC_VER="${CODEBUILD_SOURCE_VERSION:-no-vcs}"; export RUN_PREFIX="$S3_PREFIX/$SRC_VER/$CODEBUILD_BUILD_NUMBER-$BUILD_TS"; echo RUN_PREFIX="$RUN_PREFIX"'
      - 'echo === Upload Playwright report ==='
      - 'aws s3 sync playwright-report "s3://$S3_BUCKET/$RUN_PREFIX/playwright/" --delete'
      - 'aws s3 sync playwright-report "s3://$S3_BUCKET/$S3_PREFIX/latest/playwright/" --delete'
      - 'echo === Upload Allure report ==='
      - 'aws s3 sync allure-report "s3://$S3_BUCKET/$RUN_PREFIX/allure/" --delete'
      - 'aws s3 sync allure-report "s3://$S3_BUCKET/$S3_PREFIX/latest/allure/" --delete'
      - 'echo === List S3 latest and run ==='
      - 'aws s3 ls "s3://$S3_BUCKET/$S3_PREFIX/latest/playwright/" --recursive || true'
      - 'aws s3 ls "s3://$S3_BUCKET/$S3_PREFIX/latest/allure/" --recursive || true'
      - 'aws s3 ls "s3://$S3_BUCKET/$RUN_PREFIX/" --recursive || true'
      - 'echo --------- Report URLs ---------'
      - 'echo Playwright latest: http://$S3_WEBSITE_HOST/$S3_PREFIX/latest/playwright/index.html'
      - 'echo Playwright run:    http://$S3_WEBSITE_HOST/$RUN_PREFIX/playwright/index.html'
      - 'echo Allure latest:     http://$S3_WEBSITE_HOST/$S3_PREFIX/latest/allure/index.html'
      - 'echo Allure run:        http://$S3_WEBSITE_HOST/$RUN_PREFIX/allure/index.html'

artifacts:
  files:
    - 'playwright-report/**/*'
    - 'allure-report/**/*'
  discard-paths: no
  base-directory: .
